@page "/indeklima/tabel"

<PageTitle>Tabel</PageTitle>

@using kristofferhusdata.Data
@using DataLibrary
@using Microsoft.Extensions.Configuration
@inject IDataAccess _data
@inject IConfiguration _config
@inject IDialogService DialogService


<AuthorizeView>
    <Authorized>
        <h1>Mit Indeklima</h1>

        <button class="button" @onclick="ReverseTable">Vend data om</button>

        @if (climateInformation == null)
        {
            <p><em>Loading...</em></p>
        }
        else
        {
            <table class="table">
                <thead>
                    <tr>
                        <th class="dato">Dag</th>
                        <th>Data</th>
                    </tr>
                </thead>

                <tbody>
                    @foreach (var forecast in climateInformation)
                    {
                        string date = forecast.DateStamp.Substring(0, 10);
                        currentDate = date;
                        @if (currentDate != previousDate)
                        {
                            <tr>
                                <td>@currentDate</td>
                                <td>
                                    <MudButton @onclick="() => OpenDialog(date)" Variant="Variant.Filled" Color="Color.Primary">
                                        Vis data
                                    </MudButton>
                                </td>
                            </tr>
                        }
                        previousDate = currentDate;
                    }
                </tbody>
            </table>
        }
    </Authorized>

    <NotAuthorized>
        <h1>Du skal logge ind for at se den her side</h1>
    </NotAuthorized>
</AuthorizeView>

@code {
    List<ClimateInformation> climateInformation;
    string previousDate = "", currentDate = "";

    protected override async Task OnInitializedAsync()
    {
        string sql = "SELECT DateStamp, Temperature, Humidity FROM ClimateInformation";

        climateInformation = await _data.LoadData<ClimateInformation, dynamic>(sql, new { }, _config.GetConnectionString("default"));
        ReverseTable();
    }

    private void ReverseTable()
    {
        climateInformation.Reverse();
    }

    private void OpenDialog(string date)
    {
        var options = new DialogOptions
        {
            FullWidth = true,
            MaxWidth = MaxWidth.Small,
            CloseButton = true,
            DisableBackdropClick = false,
            NoHeader = false,
            Position = DialogPosition.Center,
            CloseOnEscapeKey = true
        };
        //currentRowIndex = index;
        var dayParameter = new DialogParameters { ["date"] = date };

        DialogService.Show<ClimateTableDialog>(date, dayParameter, options);
    }
}
    